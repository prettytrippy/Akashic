by arrows and inhibitory by solid circles. The simplified network on the right is mathematically identical to  that on the left by symmetry if all E —> E connections have the same strength, etc.  self-excitation by the F neuron. The equations for the spike rates are:  dF  1  d?  5V  d/_ 1  d ? ~ T o '  -E+S(\.6E-  I+K))  -I+S(\.5E))  (8.  The function 5 in (8.2) is the Naka-Rushton function from (2.11) with N = 2, M = 100,  and a = 30. These equations indicate that the F neuron receives recurrent excitation with  synaptic weight 1.6 and also receives subtractive inhibition from the / neuron. The  external input that drives the network is K, which is assumed constant. The / neuron  receives excitatory input from the E neuron with weight 1.5, and the time constants for E  and /are 5ms and 10ms respectively. When K = 0, it is easy to verify that F = 0, / = 0  is the only equilibrium point and is asymptotically stable. In an intermediate range of  lvalues the dynamics change, however, and limit cycle oscillations result.  Let us examine the state space of (8.2) in order to prove the existence of limit cycles for  K = 20. The isocline equations are:  E= S(\.6E-I+  K)  (8.3)  I=S(\.5E)  v  ;  The second of these equations is easily plotted in its current form and is shown by the  dashed line in Fig. 8.6. To plot the first isocline, however, we must employ the inverse of  S(x), which is obtained as follows:  S(x)  so y = S(x) has the inverse:  M- Mx2  for 0 < y < M  (8.4)  122  Spikes, decisions, and actions  100  100  200  300  Time (ms)  400  Fig. 8.6  Limit cycle of the Wilson-Cowan (1972) equations (8.2). Results are plotted in the phase plane  (above) along with the two isoclines from (8.3) and (8.5). The lower panel plots £(r) (solid line) and R(l)  (dashed line) as functions of time.  Therefore, the first isocline in (8.3) becomes:  / =  \.6E+K  (8.5)  As M = 100 and o = 30, the resulting isoclines for A' = 20 are plotted in the E-I state  space in Fig. 8.6. Note that there is a unique equilibrium point, which is the solution of  (8.3) with the first equation transformed into form (8.5). To solve for the equilibrium, we  simply substitute the second equation in (8.3) into (8.5) to get:  A/(1.5F)- a2±(1.5F)2  1.6F-20±cr  M  (8.6)  Nonlinear oscillations  123  MatLab provides an easy method for solving (8.6): write a function script for the left-hand  side of (8.6) (called WCequilib.m on the disk) and use the command fzero('WCequilib',  guess) where 'guess' is a first approximation to the answer. This is all implemented in  MatLab script Equilibrium WC.m, which finds that F= 12.77 at equilibrium, so 7 = 28.96  from (8.3).  Given the values of Fand /at equilibrium, we can now calculate the Jacobian of (8.2).  Using the formula for dS/d.v in (6.10):  0.42  —0 39 \  Q 3 2  _QA J;  A = 0.16±0.24i  (8.7)  Thus, the only equilibrium point of the system is an unstable spiral point. We can now  use the Poincare-Bendixon theorem to prove that (8.2) must have at least one asymp- totically stable limit cycle. Given the fact that the neural response function 0 < S < 100,it  follows that trajectories can never leave the state space box bounded by 0 and 100. This 