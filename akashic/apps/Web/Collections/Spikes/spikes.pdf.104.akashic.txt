trajectories moving off to infinity away from an unstable equilibrium point. As already  discussed, the Poincare-Bendixon theorem demonstrates that chaos cannot exist in a two- dimensional dynamical system.  The definition of chaos above is most easily understood by example. The first dynamical  system in which chaos was explicitly studied was designed to describe air flow in the  atmosphere by the meteorologist Lorenz. The Lorenz (1963) equations describe a three- dimensional dynamical system:  dx  "d~t  dr  d?  dz _  8  d?~ ~3  \0(-x+y)  -V + 28.Y-.YZ  (11.3)  8 z + xy  Note how simple these equations appear, as they contain only two nonlinear product  terms, xz and xy. Analysis of (11.3) begins with solving the isocline equations for the  equilibrium points. As the first isocline equation is simply x = y, the remaining two are  easily simplified to:  27.x- - xz = 0  (11.4)  These equations can be solved for x to give x = 0, Â±\/72, so there are three equilibrium  states located at (0,0,0), (\/72, v/72,27), and (-\/72, - \/72,27). Analysis of the Jaco- bian indicates that all three equilibrium points are unstable, being respectively a saddle  point and two unstable spiral points. Clearly, therefore, no trajectory can ever approach  an equilibrium point of the system. It is also possible to construct an ellipsoidal surface  enclosing all three equilibrium points such that all trajectories that cross this surface enter  the ellipsoid (see Chapter 14 for the general approach based on Lyapunov functions).  Therefore, all trajectories beginning near any equilibrium point must remain bounded for  all future time. This suggests the possibility of chaos, although limit cycles or quasiperi- odic solutions have not yet been excluded. Let us therefore simulate (11.3) for the initial  condition (10, 10, 40). Running MatLab script Lorenz.m produces the results depicted in  176  Spikes, decisions, and actions  10  20  x  o  Time  Fig. 11.1 Chaotic trajectory of the Lorenz equations (1 1.3). The A'-Z projection of a trajectory in the three- dimensional state space is plotted above with two of the unstable steady states (circles), and X(t) is plotted  below.  Fig. 11.1. This trajectory certainly seems to be far more complex than a limit cycle, but is it  chaos?  11.2  Signatures of chaos  To ascertain whether or not equations like (11.3) produce chaos it is necessary to ignore  the equations and examine the trajectories themselves. To ascertain whether this time- dependent function is indeed chaotic takes us into the realm of time series analysis, the  analysis of a sequence of measurements recorded from a system to determine whether the  underlying dynamics are chaotic (see Kaplan and Glass (1995) for an excellent intro- duction to time series analysis). In analyzing a system for chaos, we already know that the  lime series must fall into one of four categories: a limit cycle (however complex), a quasi- periodic solution, chaos, or random variation caused by noise. The latter possibility  does not, of course, occur in (11.3), because this is a deterministic system. A neuroscientist  in the laboratory, however, may not know the equations that define the system being  Neural chaos  177  studied, and some noise will always be present in the data. Accordingly, let us examine  several tests for chaos and see how they differentiate among limit cycles, quasiperiodicity,  chaos, and noise.  Three quantitative tests will be applied to a time series to determine whether it is  chaotic. These are: the Fourier power spectrum, the Poincare section, and the Lyapunov  exponent. These tests will be applied to each of four different time series: (11.1) with  A = 2, C = 3, B = D = 0; (11.2) with A = 2,C = 3,B = D = 0; the solution x(t) to (11.3),  and MatLab's random number generator with numbers normally distributed with mean 0  and standard deviation l(the randn function).  Books on the Fourier transform (e.g. Gaskill, 1978) prove that any finite series of points  describing a time series may be exactly represented as a sum of sine and cosine functions  with appropriate coefficients. Furthermore, there is a very fast algorithm for calculating 