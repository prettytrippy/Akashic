Thus, the error of the second order Runge-Kutta method using the smaller step size h/2 is  approximately A/3. It is important to note, however, that this is the error for a single step.  Error will, of course, be cumulative in any simulation where multiple steps are involved,  so it is prudent in neural simulations to take A itself as an estimate of the overall error  involved in the computation.  As an example, suppose we use second order Runge-Kutta to simulate (5.5) for step  sizes of both It = 2ms and It = 4ms. After 40ms (20 steps for x2 and 10 steps for A,),  xi(40) = 10.778 and A2(40) = 10.816, so the estimated error is:  Error « —= 0.0127  (5.23)  In this case the exact solution is 10.827, which is indeed within the estimated range.  Approximation and simulation  67  It is also instructive to apply this same error estimation procedure to Euler's method.  Recalling that Euler's method in (5.3) truncates the Taylor series after the first term:  x(t + h) « x i (? + /?) + h2n  /A 2  (5-24)  x(? + /o~x 2(? + /i) + 2 ( - ) n  Repeating the procedure used to obtain (5.22) reveals that the error in Euler's method is  approximately:  Error w A  (5.25)  When applied to (5.15) and Fig. 5.2, Euler's method with a 4 ms step produced the esti- mate xi (4) = 0.60, while Euler's method with two 2 ms steps yielded x2(4) = 0.64. Thus,  A = 0.04, the error estimate by (5.25). As the exact value is x(4) = 0.67, the computed  error estimate is again appropriate. From a comparison of (5.22) with (5.25), one might  expect the error from Euler's method to be about three times larger than that from second  order Runge-Kutta for the same number of calculations, which is correct.  5.4 Fourth order Runge-Kutta  The improvements in accuracy obtained with second order Runge-Kutta approxima- tions as compared to Euler's method suggest that the former technique might be profit- ably extended to higher orders. This has indeed been done, and third, fourth, and fifth  order Runge-Kutta formulas are tabulated in various books. Each of these is derived in a  manner analogous to the derivation of (5.13) from (5.6), except that the initial Taylor  series expansion is extended to third, fourth, or fifth order terms. The contemporary  standard in research is generally the fourth order Runge-Kutta scheme, and accordingly  we shall standardize on it in the rest of this book. The fourth order Runge-Kutta method  provides a significant improvement in accuracy over either second or third order methods  for the same amount of computation, and it requires only four computations at each step.  In contrast, fifth order Runge-Kutta requires six computations per step and thus is less  efficient for a minimal gain in accuracy.  The formulas for the fourth order Runge-Kutta method are summarized below. Given  x(?) defined by eqn (5.1), the approximation to x(? + h) based on terms in the Taylor series  polynomial up to /i4 is:  x(? + h) « x(?) + \ [Ki + 2K2 + 2Ki + KA)  6  68  Spikes, decisions, and actions  where  Ki =F(x(?),?)  h  h  A  l[x{t)+-Kut  + - h  / ,  ( 5 2 6 )  Ki=F\x(t)+-K2,t  + 2  K4 = F{x(t)+hK3,t  + h)  From the previous discussion, one can see that this formula again has a simple graphical  interpretation. First we calculate dx/d? at time ?, which is K\. Next we use A^in Euler's  formula (5.4) to move half way through the time interval to ? + h/2, where we again  calculate dx/d?, obtaining K2. Repeating this procedure again gives us Ky, and K^ is then  used with Euler's formula to obtain an estimate of the slope K4 at the end of the interval. 