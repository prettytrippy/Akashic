are compared with the exact solution (solid curve), which is x( ?) = exp( — ?/10). At the end  of one 4 ms time step the true result is 0.67, and the Runge-Kutta approximation is 0.68,  65  2  3  4  5  Time (msec)  Fig. 5.2 Graphical representation of the second order Runge-Kutta method. Numbers 1-4 refer to the four  steps embodied in the approximation (5.13) or (5.14).  which is an error of 1.5%. In contrast, Euler's method, which was used in (5.17 gives an  estimate of 0.6, which is in error by 10.5%. To be fair, the Runge-Kutta method required  twice as many calculations as Euler's method, so the Euler approximation should be  computed using two steps of 2 ms each for comparison. The result is easily calculated to be  0.64, which is an improvement over 0.60, but still is in error by 4.7%. Thus, even for the  same number of calculations, the second order Runge-Kutta result with a 4 ms step size is  3.0 times more accurate than Euler's method with a 2 ms step size.  We can also apply the second order Runge-Kutta routine to (5.5) and compare it with  Euler's method. With a step size /? = 2ms, the error after 40 ms is 0.1%, which is much  better than the 2.5% error of Euler's method using a step of h = 1 ms. Here again, Runge- Kutta is superior to Euler's method for the same number of calculations. This is the reason  Euler's method is never used in serious work: it is a waste of effort!  5.3 Errors in approximate solutions  The previous examples demonstrate that the second order Runge-Kutta approximation  is more accurate than Euler's method even when Euler's method uses half the step size so  that the same number of computations are required. This raises the question: just how  accurate is the Runge-Kutta approximation? This might seem to be impossible to answer,  as the exact solution will generally be unknown, so there is only the approximation itself to  rely on. However, we can still obtain a useful estimate of the error. To do so, recall that the  second order Runge-Kutta method in (5.6) is based on truncation of the Taylor series  after two terms. This means that the error in the computation will mainly depend on the  next term, which is proportional to h}. To obtain an estimate of the error, suppose we  approximate a solution twice: once with step size It and once with half the step size, h/2.  There will be twice as many steps in the latter case, but the simulation will certainly be  more accurate. If x(? + h) is the true solution after a step h, and xi (? + h) and x2(? + h)  represent the two approximations using either one step h or two steps each of size h/2,  66  Spikes, decisions, and actions  we have approximately:  x{t + h) ^ xi(t + h) + h3n  / A \ 3  (5.20)  X(? + / ! ) « A 2 ( ? + /Z) + 2 ( - J  n  The constant Q that appears here is related to the maximum value of the third derivative  of x(?) in the interval according to the Taylor series formula. Although 0 is unknown,  it will be the same number regardless of the step size chosen. Note that (h/2) is multiplied  by 2 in the second equation, as two h/2 steps were required to cover the interval h.  If both of these approximations are treated as equalities and A = x2 — x\, simple  algebra gives:  A = x2(? + /,) -xi(t  + h) = / i 3 f ? . - 2 b | j Q,  so  (5.21)  A = ±hiQ  As A is measured by simulating the solution twice, once with step It and once with step h/2,  (5.21) can be substituted for the error term containing fi in (5.20):  2 u ) n = y  s o  X(? + / I ) « A - : ( ? + / ; ) + |  This means that the estimated error is given by:  A  Error « -  (5.22) 