Spikes, decisions, and actions  Therefore, the general solution A'for A = - 8 must satisfy:  a,e- 8'\  / - 9  - 5 \ / a , e - 8 ' \  = / - 9 a , e - 8 '  -5ft, e"  ft,e-87  V 1 - 3 ; U , e - 8 7  \  flie_8'  "3^1 e"  Equating the top entries in both vectors gives the result:  -8a, e-8' = -9a, e"8' - 56, e'8'  Therefore, a, = -5b\. The reader should verify that equating the bottom entries in the  vectors gives exactly the same result. This means that either a, or b\ can assume an  arbitrary value, and we must therefore use one initial condition to specify that value.  Thus, the X vector satisfying our equation is:  X = b \  e-8<  where b\ is determined from the initial conditions. This is called an eigenvector of the  matrix A. If we repeat this procedure with the other eigenvalue, A = —4, of A, we will  obtain a relationship between a2 and b2 defining the second eigenvector of A, which  completes the solution.  The procedure for solving linear second order differential equations using Theorem 2  is very important, and fortunately it is sufficiently mechanical so that it can be done  entirely by computer. The MatLab program LinearOrder2.m produces a complete  solution to any two-component, linear system for any initial condition using Theorem 2.  For simplicity, it is assumed that the equilibrium state has been translated to the origin.  The program then plots the solutions (the state space plot will be discussed later) and  prints out a symbolic solution in terms of exponentials that is accurate to about 10" .  All the user need do is type in the A matrix and an initial condition vector B. As an  example, we can solve the following differential equation defined by the matrix A in (3.19)  for the initial condition XQ using LinearOrder2.m:  £=(-? :{)*+© -  -M:  First we solve for the equilibrium point using Equilibrium.m to obtain the result:  •%eq —  Next we subtract this from the initial condition vector Xo, to obtain a new initial condition  (XQ - ATcq). This translates the equilibrium point to the origin. Now we can use the  program LinearOrder2.m by entering the A matrix and this new initial condition.  Two-dimensional systems  35  The result is:  X  -1.25 e-8'+0.75 e"4'  0.25e"8'-0.75e-4'  Finally, we add Xeq to this to obtain the final result:  -1.25e-8' + 0.75e-4'  0.25 e~8' -0.75e- 4' +  You can verify that X(0) = 0, and Af(oo) = Xtq. As you can see, MatLab™ removes  the drudgery from this calculation!  3.3 Negative feedback in the retina  Now let us apply our knowledge of linear second order differential equations to a real  problem in neuroscience: negative feedback on cone photoreceptors in the primate retina.  There is extensive evidence that the cones stimulate horizontal cells, while horizontal cells  provide inhibitory (or negative) feedback onto the cones (Burkhardt, 1993, 1995).  Schnapf et al. (1990) recorded from single primate cones and constructed a linear feed- back circuit to explain their results, which are plotted in Fig. 3.1. The cone current in  response to a step change in luminance shows a transient overshoot followed by a slight  undershoot before reaching its equilibrium value. In slightly modified and simplified  form, the Schnapf et al. (1990) circuit can be adapted to describe cone (C) and horizontal  (//) cell interactions by the following differential equations:  dC_ J_  d?  T C  d//_ 1  d? ~ T H  -C-kH + L)  -H+C)  (3.20)  0.5  1.0  Time (sec)  Fig. 3.1  Electrical response (current) of a primate cone photoreceptor to a 1.0 s light stimulus turned on at 