Aristotle and Plato in the background. University College Cork is the modern name for Queens University Cork, and it named the new library after Boole in 1983. The Mathematics department at University College Cork holds an annual competition that is open to students of mathematics or engineering, and the winner is awarded the annual Boole prize. The prize recognises the recipient as having potential in mathematics. Further information on George Boole including his work and working relationship with Queens University Cork is in [Bar:69, McH:85]. Boole left a major legacy to the world as the design of all modern binary digital computers is dependent on Boolean algebra. The Boolean logical operations are implemented by electronic AND, OR and NOT gates, and from these fundamental building blocks more complex circuits may be designed for operations such as arith- metic. In view of this legacy, Boole is rightly considered to be one of the founding fathers of computing. 4 Finite Differences are a numerical method to solve differential equations. 5 Everest is known as Chomolungma (”Mother of the Universe”) to the Tibetans. 6 This is a novel about the struggle of an international revolutionary. Shostakovich wrote the score for the ﬁlm of the same name that appeared in 1955. 2.2 Boole 33 2.2.1 Boolean Algebra Boolean algebra was developed by George Boole in the nineteenth century. This section presents Boolean algebra in the more modern notation of the propositional calculus that computer science students are familiar with. Boolean algebra consists of propositions that are either true or false. For example, the proposition “2+2 = 4” is true, whereas the proposition “2 ∗5 = 11” is false. Variables (e.g., A, B, etc.) are used to stand for propositions, and propositions may be combined using logical connectives to form new propositions. The standard logical connectives are “and”, “or” and “not”, and these are represented by the symbols “∧”, “∨” and “¬” respec- tively. There are other logical connectives that may be used such as implication (⇒) and equivalence (⇔). These connectives may be expressed using the other logical connectives (e.g., A ⇒B is equivalent to ¬A ∨B). Propositions must be either true or false. There are several well-known properties of Boolean algebra such as the commu- tative, associative, and distributive properties. These are summarized in Table 2.1 below: Table 2.1 Properties of Boolean algebra Property Example Commutative A ∧B = B ∧A A ∨B = B ∨A Associative A ∧(B ∧C) = (A ∧B) ∧C A ∨(B ∨C) = (A ∨B) ∨C Identity A ∧True = True ∧A = A A ∨False = False ∨A = A Distributive A ∧(B ∨C) = (A ∧B) ∨(A ∧C) A ∨(B ∧C) = (A ∨B) ∧(A ∨C) De-Morgan ¬ (A ∧B) = ¬ A ∨ ¬B ¬ (A ∨B) = ¬ A ∧ ¬ B Idempotent A ∧A = A A ∨A = A The commutative property expresses the fact that the order of the two operands may be reversed without affecting the truth value of the resulting proposition. The associative property states that the conjunction or disjunction operators are asso- ciative. This means that for a Boolean expression that consists of conjunctions or disjunctions only, that the order of execution is not relevant. In other words, the same result is obtained by applying the logical operator to the ﬁrst two operands and then the applying it to the third, as applying it to the second and third and then applying the result to the ﬁrst operand. The Boolean constant “True” is the identity operation for conjunction. In other words, the conjunction of any operand A with the Boolean value “True” yields the proposition A. Similarly, the Boolean constant “False” is the identity operation for disjunction. Conjunction distributes over disjunction and vice versa. De Morgan’s Law states that the negation of the conjunction of two operands is the same as the 34 2 Foundations disjunction of the negation of each operand. The idempotent property states that the application of the conjunction or disjunction logical operator to two operands that are A yields the proposition A. Truth Tables enable the truth-values of a compound proposition to be determined from its underlying propositions. The conjunction of A and B (A ∧B) is true if and only if both A and B is true. The disjunction of A and B (A ∨B) is true if either A