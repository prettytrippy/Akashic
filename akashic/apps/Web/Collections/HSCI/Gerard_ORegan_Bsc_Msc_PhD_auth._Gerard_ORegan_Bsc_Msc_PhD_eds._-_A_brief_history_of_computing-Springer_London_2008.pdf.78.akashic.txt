European RACE II program considered the challenge of reuse. It included the formal speciﬁcation of components and developed a component model. Formal methods have a role to play in identifying and eliminating undesirable component interaction. 4.5.4 Model-Oriented Approach There are two key approaches to formal methods: namely the model-oriented approach of VDM or Z, and the algebraic, or axiomatic approach, which includes the process calculi such as the calculus communicating systems (CCS) or commu- nicating sequential processes (CSP). A model-oriented approach to speciﬁcation is based on mathematical models. A mathematical model is a mathematical representation or abstraction of a physi- cal entity or system. The representation or model aims to provide a mathematical explanation of the behavior of the system or the physical world. A model is consid- ered suitable if its properties closely match the properties of the system, and if its calculations match and simplify calculations in the real system, and if predictions of future behavior may be made. The physical world is dominated by models, e.g., models of the weather system, that enable predictions of the weather to be made, and economic models that enable predictions of the future performance of the economy may be made. It is fundamental to explore the model and to consider the behavior of the model and the behavior of the physical world entity. The adequacy of the model is the 126 4 Software Engineering extent to which it explains the underlying physical behavior, and allows predictions of future behavior to be made. This will determine its acceptability as a representa- tion of the physical world. Models that are ineffective will be replaced with newer models which offer a better explanation of the manifested physical behavior. There are many examples in science of the replacement of one theory by a newer one. For example, the Copernican model of the universe replaced the older Ptolemaic model, and Newtonian physics was replaced by Einstein’s theories on relativity. The structure of the revolutions that take place in science are described in [Kuh:70]. A model is a foundation stone from which the theory is built, and from which explanations and justiﬁcation of behavior are made. It is not envisaged that we should justify the model itself, and if the model explains the known behavior of the system, it is thus deemed adequate and suitable. Thus the model may be viewed as the starting point of the system. Conversely, if inadequacies are identiﬁed with the model we may view the theory and its foundations as collapsing, in a similar manner to a house of cards; alternately, amendments to the theory to address the inadequacies may be sought. The model-oriented approach to software development involves deﬁning an abstract model of the proposed software system. The model acts as a representation of the proposed system, and the model is then explored to assess its suitability. The exploration of the model takes the form of model interrogation, i.e., asking questions and determining the effectiveness of the model in answering the questions. The modeling in formal methods is typically performed via elementary discrete mathe- matics, including set theory, sequences, functions and relations. The modeling approach is adopted by the Vienna Development Method (VDM) and Z. VDM arose from work done in the IBM laboratory in Vienna in formalizing the semantics for the PL/1 compiler, and it was later applied to the speciﬁcation of software systems. The Z speciﬁcation language had its origins in work done at Oxford University in the early 1980s. VDM includes a methodology for software development as well as its speciﬁca- tion language originally named Meta IV (a pun on metaphor), and later renamed to VDM-SL in the standardization of VDM. The approach to software development is via step-wise reﬁnement. There are several schools of VDM, including VDM++, the object-oriented extension to VDM, and what has become known as the Irish school of VDM, i.e., VDM♣, which was developed at Trinity College, Dublin. 4.5.5 Axiomatic Approach The axiomatic approach focuses on the properties that the proposed system is to satisfy, and there is no intention to produce an abstract model of the system. The required properties and behavior of the system are stated in mathematical notation. The difference between the axiomatic speciﬁcation and a model-based approach is illustrated by the example of a stack. The stack includes operators for pushing an element onto the stack and popping an element from the stack. The properties of pop and push are explicitly deﬁned in the axiomatic approach. The model-oriented 4.5 Formal Methods 127 approach constructs an explicit model of the stack and the operations are deﬁned in terms of the effect that they have on the model. The speciﬁcation of an abstract data