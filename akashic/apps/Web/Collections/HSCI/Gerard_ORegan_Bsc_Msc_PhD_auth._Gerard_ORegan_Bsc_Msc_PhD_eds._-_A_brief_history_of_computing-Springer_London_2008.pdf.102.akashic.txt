in the formalisation of common-sense knowledge and reasoning. Common-sense knowledge includes basic facts about actions and their effects, facts about beliefs and desires, and facts about knowledge and how it is obtained. He argues that common-sense reasoning is required for solving problems in the real world, and that therefore it is reasonable to apply common-sense knowledge to the world of artiﬁcial intelligence. His approach is to use mathematical logic to formalise common-sense knowledge to allow common-sense problems to be solved by logical reasoning. This requires sufﬁcient understanding of the common-sense world to enable facts to be formalised. One problem is that often the reasoner doesn’t know which facts are relevant in solving a particular problem. Knowledge that was thought to be irrel- evant to the problem to be solved may be essential. A computer may have millions 5.8 Logic and AI 169 of facts stored in its memory, and the problem is how can it determine the relevant facts from its memory to serve as premises for logical deduction. McCarthy philosophy of producing programs with common sense was discussed in his inﬂuential 1959 paper [Mc:59]. This paper discusses various common-sense problems such as getting home from the airport. Other examples of common-sense problems are diagnosis, spatial reasoning, and understanding narratives that include temporal events. Computers need a precise language to store facts about the world and to reason about them. It needs a rigorous deﬁnition of the reasoning that is valid as this will determine how the deduction of a new formula from a set of formulae is done. Mathematical logic is the standard approach to express premises, and it includes rules of inferences that are used to deduce valid conclusions from a set of premises. The propositional and predicate calculii were discussed earlier in Chapter 4. Propositional calculus associates a truth-value with each proposition, and includes logical connectives to produce formulae such as A ⇒B, A∧B, and A∨B. The truth values of the propositions are normally the binary values of true and false. There are other logics, such as 3-valued logic or fuzzy logics that allow more than two truth-values for a proposition. Predicate logic is more expressive than propositional logic, and it can formalise the syllogism “All Greeks are mortal; Socrates is a Greek; Therefore, Socrates is mortal”. The predicate calculus consists of: r Axioms r Rules for deﬁning well-formed formulae r Inference rules for deriving theorems from premises A formula in predicate calculus is built up from the basic symbols of the language. These include variables, predicate symbols such as equality; function symbols, con- stants logical symbols such as: ∃, ∧, ∨, ¬, and punctuation symbols such as brackets and commas. The formulae of predicate calculus are built from terms, where a term is deﬁned recursively as a variable or individual constant or as some function con- taining terms as arguments. A formula may be an atomic formula, or built from other formulae via the logical symbols. There are several rules of inference associated with predicate calculus, and the most important of these are modus ponens and generalisation. The rule of modus ponens states that given two formulae p, and p ⇒q, then we may deduce q. The rule of generalisation states that given a formula p that we may deduce ∀(x)p. McCarthy’s approach to programs with common sense has been criticized by Bar-Hillel and others on several grounds: r How can a computer know from the set of facts that it knows which facts are appropriate to apply in deduction in a given situation. r Many philosophers believe that common sense is fairly elusive. However, while logic is unlikely to prove the main solution to the problems in AI, it is likely to form part of the solution. 170 5 Artiﬁcial Intelligence and Expert Systems 5.9 Computability, Incompleteness and Decidability An algorithm (or procedure) is a ﬁnite set of unambiguous instructions to perform a speciﬁc task. The term “algorithm” is named after the Persian mathematician Al- Khwarizmi. The concept of an algorithm was deﬁned formally by Church in 1936 with the lambda calculus, and independently by Turing with the Turing machines. Turing deﬁned computability in terms of the mechanical procedure of a Turing machine, whereas Church deﬁned computability in terms of the lambda calculus. Later it was shown that computability by Turing machines and lambda calculus are equivalent. Formalism was proposed by Hilbert as a foundation for mathematics in the early twentieth century. A formal system consists of a formal language, a set of axioms and rules of inference. Hilbert’s programme was concerned with the formalization of mathematics (i.e., the axiomatization of mathematics) together with a proof that