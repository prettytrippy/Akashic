these internet ﬁrms. Funding is easy to obtain when stock prices are rising at a rapid rate. However, when prices are static or falling, with negligible or negative business return to the investor, then funding dries up. The actions of the Federal Reserve in rising interest rates to prevent inﬂationary pressures also helped to correct the irrational exuberance. However, it would have been more appropriate to have taken this action 2–3 years earlier. Some independent commentators had recognized the bubble but their comments and analysis had been largely ignored. These included “The Financial Times” and the “Economist” as well as some commentators in the investment banks. Investors rarely queried the upbeat analysis coming from Wall Street, and seemed to believe that the boom would never end. They seemed to believe that rising stock prices would be a permanent feature of the United States stock markets. Greenspan had argued that it is difﬁcult to predict a bubble until after the event, and that even if the bubble had been identiﬁed it could not have been corrected without causing a contraction. Instead, the responsibility of the Fed according to Greenspan was to mitigate the fallout when it occurs. 6.8 E-Software Development 197 There have, of course, been other stock market bubbles throughout history. For example, in the 1800s there was a rush on railway stock in England leading to a bubble and eventual burst of railway stock prices in the 1840s. 6.8 E-Software Development The growth of the world-wide web and electronic commerce in recent years has made the quality, reliability and usability of the web sites a key concern. An organi- sation that conducts part or all of its business over the world-wide web will need to ensure that its web site is ﬁt for purpose. Software development for web-based sys- tems is relatively new, and an introduction is provided in [Nie:01]. Web applications are quite distinct from other software systems in that: r They may be accessed from anywhere in the world. r They may be accessed by many different browsers. r The world-wide web is a distributed system with millions of servers and billions of users. r The usability and look and feel of the application is a key concern. r The performance of the web site is a key concern. r Security threats may occur from anywhere. r The web site must be capable of dealing with a large number of transactions at any time. r The web site has very strict availability constraints (typically 24×7 ×365 avail- ability). r The web site needs to be highly reliable. There are various roles involved in web based software development including content providers who are responsible for providing the content on the web; web designers who are responsible for graphic design of the web site; programmers who are responsible for the implementation; and administrators who are responsible for administration of the web site. These roles may be combined in practice. Rapid Application Development (RAD) or Joint Application Development (JAD) lifecycles are often employed for web site development. The lifecycle followed is usually spiral rather than waterfall, and it is often the case that the requirements for web-based systems will not be fully deﬁned at project initiation. This is especially the case with usability requirements that generally evolve to the ﬁnal agreed set. It is generally inappropriate to employ the waterfall lifecycle for this domain. The software development proceeds in a number of spirals where each spiral typ- ically involves updates to the requirements, design, code, testing, and a user review of the particular iteration or spiral. The spiral is, in effect, a re-usable prototype and the customer examines the cur- rent iteration and provides feedback to the development team to be included in the next spiral. The approach is to partially implement the system. This leads to a better understanding of the requirements of the system and it then feeds into the next 198 6 The Internet Revolution Plan/  Reqs / DB Design  Reqs / Design Reqs / Design Code/revie Test User Reqs / Design Test Test User User Code/revie Code/revie Customer Acceptanc Implementati on / Cleanup Fig. 6.5 Spiral lifecycle model cycle in the spiral. The process repeats until the requirements and product are fully complete. The spiral model is shown in Fig. 6.5. Web site quality and performance is a key concern to companies and their cus- tomers. The implementation of a web site requires sound software engineering prac- tices to design, develop and test the web site. A spiral lifecycle is usually employed and the project team needs to produce sim- ilar documentation as the waterfall model, except that the chronological sequence of delivery of the documentation is more ﬂexible. The joint application development is important as it allows early user feedback to be received on the look and feel and correctness of the application. The approach is often “design a little, implement a