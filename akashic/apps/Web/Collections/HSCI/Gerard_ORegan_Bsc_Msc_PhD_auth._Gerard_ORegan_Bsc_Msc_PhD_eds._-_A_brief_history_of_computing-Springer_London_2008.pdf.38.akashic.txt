invented a formal system which is the basis of modern predicate logic. It included axioms, deﬁnitions, universal and existential quantiﬁcation, and formalization of proof. This formal system would essentially become the predicate calculus. His objective was to show that mathematics was reducible to logic but this project failed as one of the axioms that he had added to his system proved to be inconsistent. 2.4 Formalism 45 This inconsistency was pointed out by Bertrand Russell, and is known as Russell’s paradox.13 The expressions in a formal system are all terms, and a term may be simple or complex. A simple term may be an object such as a number, and a complex term may be an arithmetic expression such as 43 + 1. The complex term is formed via functions, and for the expression above the function employed is the cube function with argument 4. The sentences of the logical system are complex terms that denote the truth- values of true or false. The sentences may include the binary function for equality (such as x = y), and this returns true if x is the same as y, and false otherwise. Similarly, more complex expression such as f (x, y, z) = w is true if f (x, y, z) is identical with w, and false otherwise. Frege represented statements such as “5 is a prime” by “P(5)” where P() is termed a concept. The statement P(x) returns true if x is prime. His approach was to represent a predicate as a function of one variable which returns a Boolean value of true or false. Formalism was proposed by Hilbert (Fig. 2.9) as a foundation for mathematics in the early twentieth century. The motivation for the programme was to provide a secure foundations for mathematics and to resolve the contradictions in set theory identiﬁed by Russell’s paradox. A formal system consists of a formal language, a set of axioms and rules of inference. It is generally intended to represent some aspect of the real world. Hilbert’s programme was concerned with the formalization of mathematics (i.e., the axiomatization of mathematics) together with a proof that the axiomatization was consistent. The speciﬁc objectives of Hilbert’s programme were to: r Develop a formal system where the truth or falsity of any mathematical statement may be determined. r A proof that the system is consistent (i.e., that no contradictions may be derived). A proof in a formal system consists of a sequence of formulae, where each formula is either an axiom or derived from one or more preceding formulae in the sequence by one of the rules of inference. Hilbert outlined twenty-three key problems that needed to be solved by math- ematicians, and he believed that every problem could be solved (i.e., the truth or falsity of any mathematical proposition could be determined). Further, he believed that formalism would allow a mechanical procedure (or algorithm) to determine whether a particular statement was true or false. This problem is known as the decision problem (Entscheidungsproblem).The question had been considered by Leibnitz in the seventeenth century. He had constructed a mechanical calculating machine, and wondered if a machine could be built that could determine whether particular mathematical statements are true or false. Deﬁnition 2.1 (Algorithm) An algorithm (or procedure) is a ﬁnite set of unam- biguous instructions to perform a speciﬁc task. 13 Russell’s paradox is discussed in section 2.7. 46 2 Foundations Fig. 2.9 David Hilbert The term “algorithm” is named after the Persian mathematician Al-Khwarizmi as discussed in Chapter 1. The concept of an algorithm was deﬁned formally by Church in 1936 with the lambda calculus, and independently by Turing with his theoretical Turing machines. These two approaches are equivalent. Hilbert believed that every mathematical problem could be solved and therefore expected that the formal system of mathematics would be decidable: Deﬁnition2.2 (Decidability) Mathematics is decideable if the truth or falsity of any mathematical proposition may be determined by an algorithm. Church and Turing independently showed this to be impossible in 1936. Turing showed that decidability was related to the halting problem for Turing machines, and therefore if ﬁrst-order logic were decidable then the halting problem for Turing machines could be solved. However, he had already proved that there was no general algorithm to determine whether a given Turing machine halts. Therefore, ﬁrst order logic is undecidable. 2.5 Turing 47 A well-formed formula is valid if it follows from the axioms of ﬁrst-order logic. A formula is valid if and only if it is true in every interpretation of the formula in the