Deﬁnition 4.2 (Partial Correctness) The meaning of the Hoare triple above is that whenever the predicate P holds of the state before the execution of the command or program Q, then the predicate R will hold after the execution of Q. The brackets indicate partial correctness as if Q does not terminate then R can be any predicate. R may be chosen to be false to express that Q does not terminate. Total correctness requires Q to terminate, and at termination R is true. Termi- nation needs to be proved separately. Hoare logic includes axioms and rules of inference rules for the constructs of imperative programming language. Hoare and Dijkstra were of the view that the starting point of a project should always be the speciﬁcation, and that the proof of the correctness of the program should be devel- oped along with the program itself. 4.4 Software Engineering Mathematics The use of mathematics plays a key role in the classical engineer’s work. For exam- ple, bridge designers will develop a mathematical model of a bridge prior to its construction. The model is a simpliﬁcation of the reality, and an exploration of the model enables a deeper understanding of the proposed bridge to be gained. Engi- neers will model the various stresses on the bridge to ensure that the bridge design can deal with the projected trafﬁc ﬂow. The ability to use mathematics to solve practical problems is part of the engineer’s education, and is part of the daily work of an engineer. The engineer applies mathematics and models to the design of the product, and the analysis of the design is a mathematical activity. 4.4 Software Engineering Mathematics 117 Mathematics allows a rigorous analysis to take place and avoids an over-reliance on intuition. The focus in engineering needs to be on mathematics that can be applied to solve practical problems and in developing products that are ﬁt for use, rather than on mathematics for its own sake that is the focus of the pure mathemati- cian. The emphasis in engineering is always in the application of the theorem rather than in the proof, and the objective is therefore to teach students how to use and apply mathematics to program well and to solve practical problems. There is a rich body of classical mathematics available that may be applied to software engineering. Other specialized mathematical methods and notations have been developed by others to assist in software engineering (e.g., Z, VDM, VDM♣, and CSP). The mathematical foundation for software engineering should include the following (Table 4.2). The use of mathematics in software engineering is discussed in more detail in [ORg:06]. The emphasis is on mathematics that can be applied to solve practical Table 4.2 Mathematics for software engineering Area Description Set Theory This material is elementary but fundamental.. It includes, set union and intersection operations; the Cartesian product of two sets, etc. Relations A relation between A and B is a subset of A × B. For example, the relation T(A, A) where (a1 , a2 ) ∈T if a1 is taller than a2 Functions A function f : A →B is a relation where for each a ∈A there is exactly one b ∈B such that (a, b) ∈f . This is denoted by f (a) = b. Functions may be total or partial. Logic Logic is the foundation for formal reasoning. It includes the study of propositional calculus and predicate calculus. It enables further truths to be derived from existing truths. Calculus Calculus is used extensively in engineering and physics to solve practical problems. It includes differentiation and integration, numerical methods, solving differential equations, etc. Probability Theory Probability theory is concerned with determining the mathematical probability of various events occurring. One example of its use in software engineering is in predicting the reliability of a software product. Finite State Machines Finite state machines are mathematical entities that are employed to model the execution of a program. The mathematical machine is in a given state, and depending on the input there is a change to a new state. They may be deterministic or non-deterministic. Tabular Expressions This approach developed by Parnas and others may be employed to specify the requirements of a system. It allows complex predicate calculus expressions to be presented in a more readable form (in a 2-dimensional table). Graph Theory Graphs are useful in modeling networks and a graph consists of vertices and edges. An edge joins two vertices. Matrix Theory This includes the study of 2 × 2 and m × n dimensional matrices. It includes calculating the determinants of a matrix and the inverses of a matrix. 118 4 Software Engineering problems rather than on theoretical mathematics. Next, we consider various formal methods that may be employed to assist in the development of high-quality software. 4.5 Formal Methods Formal methods consist of formal speciﬁcation languages or notations, and gener- ally employ a collection of tools to support the syntax checking of the speciﬁcation,