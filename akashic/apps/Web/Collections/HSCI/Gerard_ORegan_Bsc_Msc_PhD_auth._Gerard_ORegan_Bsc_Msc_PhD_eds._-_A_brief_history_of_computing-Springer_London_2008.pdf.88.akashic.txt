by Michael Fagan of IBM [Fag:76]. It is a seven-step process that identiﬁes and removes errors in work products. There is a strong economic case for identifying defects as early as possible, as the cost of correction of increases the later a defect is discovered in the lifecycle. The Fagan inspection process mandates that requirement 31 Most existing theorem provers are difﬁcult to use and are for specialist use only. There is a need to improve the usability of theorem provers. 32 As discussed earlier this veriﬁcation was controversial with RSRE and Charter overselling VIPER as a chip design that conforms to its formal speciﬁcation. 4.6 Software Inspections and Testing 141 documents, design documents, source code, and test plans are all formally inspected by experts independent of the author of the deliverable to ensure quality. There are various roles deﬁned in the inspection process including the modera- tor who chairs the inspection. The moderator is skilled in the inspection process, and is responsible for ensuring that all of the participants receive the appropri- ate materials for the inspection, and that sufﬁcient preparation has been done by all of the participants. The moderator will ensure that any major or minor errors identiﬁed are recorded, and that the speed of the inspection does not exceed the recommended guidelines. The reader’s responsibility is to read or paraphrase the particular deliverable, and the author is the creator of the deliverable and has a special interest in ensuring that it is correct. The tester role is concerned with the test viewpoint. The inspection process will consider whether a design is correct with respect to the requirements, and whether the source code is correct with respect to the design. There are seven stages in the inspection process and these are described in detail in [ORg:02]: r Planning r Overview r Prepare r Inspect r Process improvement r Re-work r Follow-up The errors identiﬁed in an inspection are classiﬁed into various types as deﬁned by the Fagan methodology. A mature organization will record the inspection data in a database and this will enable analysis to be performed on the most common types of errors. The analysis will yield actions to be performed to minimize the re-occurrence of the most common defect types. Also, the data will enable the effectiveness of the organization in identifying errors in phase and detecting defects out of phase to be determined and improved. Another approach to software inspec- tion has been deﬁned by Tom Gilb [Glb:94]. Some organizations use less formal inspection methodologies such as pass-around peer reviews. This involves sending a deliverable to the reviewers and requesting comments by a certain date. The author is then responsible for collating the comments and acting upon them appropriately. The disadvantage of this approach is that control of the inspection is given to the author rather than an independent moderator. Another approach to peer reviews is available with the Prince 2 project methodology. Software testing plays a key role in verifying that a software product is of high quality and conforms to the customer’s quality expectations. Testing is both a con- structive activity in that it is verifying the correctness of functionality, and it may be a destructive activity in that the objective is to ﬁnd as many defects as possible in the software. The testing veriﬁes that the requirements are correctly implemented as well as identifying whether any defects are present in the software product. 142 4 Software Engineering There are various types of testing such as unit testing, integration testing, sys- tem testing, performance testing, usability testing, regression testing, and customer acceptance testing. It needs to be planned to ensure that it is effective. Test cases will need to be prepared and executed, the results reported and any issues corrected and re-tested. The test cases will need to be appropriate to verify the correctness of the software. The quality of the testing is dependent on the maturity of the test process, and a good test process will include: Test Case Analysis & Design 1.Define Test Scripts (Unit, System, UAT, Other) Test Planning 1.Determine Scope of Testing 2.Identify Resources Required  3.Document Project Test Plan 4.Set up Defect Log  5.Prepare Test Schedule  Test Execution 1.Perform Testing 2. Report Results 3.Update Defect Log Prepare Test Report 1.Test Results 2.Updated Defect Log N 1.Project Test Plan 2.Test Schedule 3.Defect Log Correct Defects 1. Analyse Defects 2.Perform modifications 1.Test Report Y *Other Testing may include Unit Integration Testing, System Integration Testing, Regression Testing, Load/Performance Testing, Security Testing, Usability Testing, etc.  Business Requirements BRS FRS Tech Specification Unit Test Scripts Unit Test Case  Analysis & Design System Test Scripts UAT Test Scripts Other Test Scripts System Test Case  Analysis & Design UAT Test Case  Analysis & Design Other Test Case 