was a lack of interest to its adoption by commercial companies due to the absence of standard input and output facilities in its description. ALGOL 60 became the standard for the publication of algorithms, and it had a major inﬂuence on later language development. ALGOL evolved during the 1960s but not in the right direction. The ALGOL 68 committee decided on a very complex design rather than the simple and elegent ALGOL 60 speciﬁcation. The eminent computer scientist, C.A.R. Hoare, remarked that: Comment 3.1 (Hoare on ALGOL 68) ALGOL 60 was a great improvement on its successors. ALGOL 60 inspired many languages that followed it such as Pascal, C, Modula 2 and Ada. 3.3.3 Pascal and C The Pascal programming language was developed by Niklaus Wirth in the early 1970s (Fig. 3.2). It is named after Blaise Pascal who was a well-known seventeenth century French mathematician and philosopher. Pascal was based upon the ALGOL programming language, and it was intended mainly to be used as a teaching lan- guage and to teach students structured programming. Structured programming [Dij:68] was concerned with rigorous techniques to design and develop programs. Dijkstra argued against the use of the GOTO state- ment “GOTO Statement considered harmful” [Dij:68]. Today, it is agreed that the GOTO statement should only be used in rare circumstances. The debate on structured programming [Dij:72] was quite intense in the late 1960s. This inﬂuenced language design and led to several languages that did not include the GOTO statement. The Pascal language includes the following constructs: 82 3 Computer Programming Languages Fig. 3.2 Niklaus Wirth Photo courtesy of Wikipedia. r If Statement if (A = B) then A := A + 1 else A := A - 1; r While Statement while A > B do A := A - 1; r For Statement for I := 1 to 5 do WRITELN(I); r Repeat Statement6 repeat A := A + 1 until A > 5; r Assignment Statement I := I + 1; r Case Statement7 case expr of expr-value-1: R := R + 1; expr-value-2: R := 4 end 6 The Repeat Statement and the While Statement are similar. The key difference is that the state- ment in the body of the Repeat statement is executed at least once, whereas the statement within the body of a while statement may never be executed. 7 The Case statement is, in effect, a generalised if statement. 3.3 Imperative Programming Languages 83 The Pascal language has several reserved words (known as keywords) that have a special meaning within the language. These keywords may not be used as program identiﬁers. Examples of reserved words in Pascal include “begin, end, while, for, if”, and so on. The following is an example of a simple Pascal program that displays ‘Hello World’: program HELLOWORLD (OUTPUT); begin WRITELN (’Hello World!’) end. Pascal includes several simple data types such as Boolean, Integer, Character and Real data types, and it also allows more advanced data types. The advanced data types include arrays, enumeration types, ordinal types, and pointer data types. The language allows the construction of more complex data types (known as records) from existing data types. Types are introduced by the reserved word “type”. type c = record a: integer; b: char end; Pascal includes a “pointer” data type, and this data type allows linked lists to be created by including a pointer type ﬁeld in the record. type BPTR = ˆB; B = record A : integer; C : BPTR end; var LINKLIST : BPTR; Here the variable LINKLIST is a pointer to the data type B, where B is a record. The following statements create a new record and assigns the value 5 to the ﬁeld A in the record. NEW (LINKLIST); LINKLISTˆ.A := 5; LINKLISTˆ.C := nil; 84 3 Computer Programming Languages Pascal is a block structured language, and Pascal programs are structured into proce- dures and functions. Procedures and functions can nest to any depth, and recursion (i.e., where a function or procedure may call itself) is allowed. Each procedure or function block can have its own constants, types, variables, and other procedures and functions. These are all within scope within the block. There were a number of criticisms made of the Pascal programming language by Brian Kernighan in [Ker:81]. He argued that Pascal was a teaching language