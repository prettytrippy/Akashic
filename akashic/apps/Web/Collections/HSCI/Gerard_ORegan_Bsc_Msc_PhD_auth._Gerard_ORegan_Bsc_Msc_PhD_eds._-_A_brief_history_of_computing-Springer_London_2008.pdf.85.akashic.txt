Immanent in Nervous Activity” [McP:43] contributed to the study of neural net- works as well as to the theory of automata and cybernetics. They were interested in modelling the thought process for humans and machines. George Mealy and Edward Moore generalised the theory to more powerful machines in separate papers in the mid 1950s. These ﬁnite-state machines are referred to as the “Mealy machine” and the “Moore machine”. The Mealy machine determines its outputs through the current state and the input, whereas the output of Moore’s machine is based upon the current state alone. Deﬁnition 4.4 (Finite State Machine) A ﬁnite state machine (FSM) is an abstract mathematical machine that consists of a ﬁnite number of states. It includes a start state q0 in which the machine is in initially, a ﬁnite set of states Q, an input alphabet , a state transition function , and a set of ﬁnal accepting states F (where F ⊆, Q). The state transition function takes the current state and an input and returns the next state. That is, the transition function is of the form:  : Q ×  →Q. The transition function may be extended to provide output as well as a state transi- tion. Finite State machines may be represented by state diagrams. Each state accepts a ﬁnite number of inputs. The transition function provides rules that deﬁne the action of the machine for each input. Finite state machines may be deterministic or non- deterministic. A deterministic ﬁnite state machine changes to exactly one state for 136 4 Software Engineering each input transition, while a non-deterministic automaton may have a choice of states to move to for a particular input. Finite state automata can compute only very primitive functions and are therefore not an adequate model for computing. There are more powerful automata that com- pute whatever is computable. The Turing machine is essentially a ﬁnite automaton with an inﬁnite storage (memory), and anything that is computable is computable by a Turing machine. The memory of the Turing machine is a tape which con- sists of an inﬁnite number of one-dimensional cells. The Turing machine provides a mathematical abstraction of computer execution and storage, as well as providing a mathematical deﬁnition of an algorithm. 4.5.11 The Parnas Way Parnas has been inﬂuential in the computing ﬁeld, and his ideas on the speciﬁcation, design, implementation, maintenance, and documentation of computer software remain important. He advocates a solid engineering approach to the development of high-quality software and argues that the role of the engineer is to apply scientiﬁc principles and mathematics to design and develop useful products. He argues that computer scientists should be educated as engineers and provided with the right sci- entiﬁc and mathematical background to do their work effectively. His contributions to software engineering include: r Tabular expressions Tabular expressions are mathematical tables for specifying requirements and are also used in design. They enable complex predicate logic expressions to be rep- resented in a simpler form. r Mathematical documentation Parnas advocates the use of mathematical documents for software engineering that are precise and complete. r Requirements speciﬁcation He advocates the use of mathematical relations to specify the requirements pre- cisely. r Software design His contribution to software design includes information hiding that allows soft- ware to be designed for change. A module is characterised by its knowledge of a design decision (secret) that it hides from all others. Every information-hiding module has an interface that provides the only means to access the services pro- vided by the modules. The interface hides the module’s implementation. Infor- mation hiding30 is used in object-oriented programming. 30 I ﬁnd it surprising that many in the object-oriented world seem unaware that information hiding goes back to the early 1970s and many have never heard of Parnas. 4.5 Formal Methods 137 r Software inspections His approach to software inspections is quite distinct from the popular Fagan or Gilb inspection methodologies. The reviewers are required to take an active part in the inspection and they are provided with a list of questions by the author. The reviewers are required to provide documentation of their analysis to justify the answers to the individual questions. The inspections involve the production of mathematical tables, and may be applied to the actual software or documents. r Predicate logic Parnas has introduced an approach to deal with undeﬁned values in predicate logic expressions. The approach preserves the two-valued logic, and is quite dis- tinct from the logic of partial functions developed by Cliff Jones. The latter is a three-valued logic. 4.5.12 Uniﬁed Modeling Language