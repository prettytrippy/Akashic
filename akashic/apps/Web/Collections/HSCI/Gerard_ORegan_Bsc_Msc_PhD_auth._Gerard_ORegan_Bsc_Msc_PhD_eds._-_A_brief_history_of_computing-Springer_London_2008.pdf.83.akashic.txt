Predicate calculus includes variables, and a formula in predicate calculus is built up from the basic symbols of the language. These symbols include variables; predi- cate symbols, including equality; function symbols, including the constants; logical symbols, e.g., ∃, ∧, ∨, ¬, etc.; and the punctuation symbols, e.g., brackets and com- mas. The formulae of predicate calculus are built from terms, where a term is a key construct, and is deﬁned recursively as a variable or individual constant or as some function containing terms as arguments. A formula may be an atomic formula or built from other formulae via the logical symbols. Other logical symbols are then deﬁned as abbreviations of the basic logical symbols. An interpretation gives meaning to a formula. If the formula is a sentence (i.e., it does not contain any free variables), then the given interpretation is true or false. If a formula has free variables, then the truth or falsity of the formula depends on the values given to the free variables. A formula with free variables essentially describes a relation say, R(x1, x2, . . . , xn) such that R(x1, x2, . . . , xn) is true if 4.5 Formal Methods 133 (x1, x2, . . . , xn) is in relation R. If a formula with free variables is true irrespective of the values given to the free variables, then the formula is true in the interpretation. A valuation function is associated with the interpretation, and this gives meaning to the formulae in the language. Thus, associated with each constant c is a constant c in some universe of values ; with each function symbol f , we have a function symbol f in ; and for each predicate symbol P a relation P in . The valuation function, in effect, gives a semantics to the language of the predicate calculus L. The truth of a proposition P is then deﬁned in the natural way, in terms of the meanings of the terms, the meanings of the functions, predicate symbols, and the normal meanings of the connectives. Mendelson [Men:87] provides a rigorous though technical deﬁnition of truth in terms of satisfaction (with respect to an interpretation M). Intuitively, a formula F is satisﬁable if it is true (in the intuitive sense) for some assignment of the free variables in the formula F. If a formula F is satisﬁed for every possible assignment to the free variables in F, then it is true (in the technical sense) for the interpretation M. An analogous deﬁnition is provided for false in the interpretation M. A formula is valid if it is true in every interpretation; however, as there may be an uncountable number of interpretations, it may not be possible to check this requirement in practice. M is said to be a model for a set of formulae if and only if every formula is true in M. There is a distinction between proof theoretic and model theoretic approaches in predicate calculus. Proof theoretic is essentially syntactic, and we have a list of axioms with rules of inference. In this way the theorems of the calculus may be logically derived, and thus we may logically derive (i.e., |-A) the theorems of the calculus. In essence the logical truths are a result of the syntax or form of the formulae, rather than the meaning of the formulae. Model theoretical, in contrast is essentially semantic. The truths derive essentially from the meaning of the symbols and connectives, rather than the logical structure of the formulae. This is written as | -M A. A calculus is sound if all the logically valid theorems are true in the interpre- tation, i.e., proof theoretic ⇒model theoretic. A calculus is complete if all the truths in an interpretation are provable in the calculus, i.e., model theoretic ⇒proof theoretic. A calculus is consistent if there is no formula A such that |- A and |- ¬ A. 4.5.9.1 Predicate Transformers and Weakest Preconditions The precondition of a program S is a predicate, i.e., a statement that may be true or false, and it is usually required to prove that if Q is true, where Q is the precondition of a program S; i.e., ({Q}S{R}), then execution of S is guaranteed to terminate in a ﬁnite amount of time in a state satisfying R. The weakest precondition (cf. p. 109 of [Gri:81]) of a command S with respect to a postcondition R represents the set of all states such that if execution begins in any one of these states, then execution will terminate in a ﬁnite amount of time in a state with R true. These set of states may be represented by a predicate Q′, so